<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RaphGL</title>
    <link>http://raphgl.com/blog/</link>
    <description>Recent content on RaphGL</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://raphgl.com/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How base64 works</title>
      <link>http://raphgl.com/blog/how_base64_works/</link>
      <pubDate>Fri, 01 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://raphgl.com/blog/how_base64_works/</guid>
      <description>In this document I explain how base64 works and go step by step on how one would go about implementing it.&#xA;&#xA;&lt;a href=&#34;./index.pdf&#34;&gt;&#xA;  &lt;h1&gt;Open PDF&lt;/h1&gt;&#xA;&lt;/a&gt;</description>
    </item>
    <item>
      <title>Poetry is a saner package manager for Python</title>
      <link>http://raphgl.com/blog/poetry-is-saner/</link>
      <pubDate>Mon, 10 Oct 2022 12:13:10 -0100</pubDate>
      <guid>http://raphgl.com/blog/poetry-is-saner/</guid>
      <description>&lt;p&gt;Like many, I enjoy Python and the versatility and speed of development it provides. But, to me Python tooling is a big deal breaker. It&amp;rsquo;s insane, there&amp;rsquo;s way too many ways to do things. Not to mention that documentation in the official python website is kind of convoluted, you end up going through hoops to understand whatever you need or relying on other people&amp;rsquo;s tutorials, videos, etc, to understand them, even then it can be overwhelming the amount of choices there are in python. For python bundling you have: wheels, pyinstaller, py2exe. For configuration you have: setup.py, setup.cfg, pyproject.toml. Then you need to configure your environment: pyenv, pipenv, virtualenv. This goes on and on and the recommended approach seems to change every few years and we get a conflict between all of these being used in production.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up NeoVim for Godot</title>
      <link>http://raphgl.com/blog/godot-with-nvim/</link>
      <pubDate>Fri, 23 Sep 2022 13:28:10 -0100</pubDate>
      <guid>http://raphgl.com/blog/godot-with-nvim/</guid>
      <description>&lt;p&gt;Recently I&amp;rsquo;ve been using Godot a bit to mess around with game development and I wanted to have autocompletion working with CoC. I looked around and there were no extensions for the Godot LSP. So, to use Godot with NeoVim I just had to connect to their LSP.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
